{"version":3,"sources":["components/PageLink/PageNavLink.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","name","className","isActive","classNames","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","PeopleTable","people","isLoading","error","personSlug","useParams","length","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","setIsLoading","setError","useEffect","peopleFromServer","peopleWithParents","find","motherPerson","fatherPerson","catch","finally","NotFoundPage","App","role","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b8ca04d0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  name: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, name }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )\n    )}\n  >\n    {name}\n  </NavLink>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n  isLoading: boolean;\n  error: string;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, isLoading, error }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {!isLoading && (\n          <>\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {error}\n            </p>\n            {people.length === 0 && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning': person.slug === personSlug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother && (\n                        <PersonLink person={person.mother} />\n                      )}\n                      {person.motherName && !person.mother && (\n                        <p>{person.motherName}</p>\n                      )}\n                      {!person.motherName && '-'}\n                    </td>\n                    <td>\n                      {person.father && (\n                        <PersonLink person={person.father} />\n                      )}\n                      {person.fatherName && !person.father && (\n                        <p>{person.fatherName}</p>\n                      )}\n                      {!person.fatherName && '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        const peopleWithParents = peopleFromServer.map((person) => {\n          const mother = peopleFromServer.find(\n            (motherPerson) => motherPerson.name === person.motherName,\n          );\n          const father = peopleFromServer.find(\n            (fatherPerson) => fatherPerson.name === person.fatherName,\n          );\n\n          return { ...person, mother, father };\n        });\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => {\n        setError('Unable to load people');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable\n        people={people}\n        isLoading={isLoading}\n        error={error}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PageNavLink } from './components/PageLink/PageNavLink';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink\n            to=\"/\"\n            name=\"Home\"\n          />\n\n          <PageNavLink\n            to=\"/people\"\n            name=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}